<Type Name="RigidBody2D" FullName="Urho.Urho2D.RigidBody2D">
  <TypeSignature Language="C#" Value="public class RigidBody2D : Urho.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RigidBody2D extends Urho.Component" />
  <AssemblyInfo>
    <AssemblyName>Urho</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Urho.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            2D rigid body component.
            </summary>
    <remarks>
      <para>There are three different kinds of rigid bodies, as defined in <see cref="T:Urho.Urho2D.BodyType2D" />. Rigid bodies can be moved/rotated by applying forces and impulses.</para>
      <para>Linear force, either progressive or gradual can be applied by using <see cref="M:Urho.Urho2D.RigidBody2D.ApplyForce" /> and <see cref="M:Urho.Urho2D.RigidBody2D.ApplyForceToCenter" />. </para>
      <para>Linear or angular impuse, either as brutal or immediate can be applied by using <see cref="M:Urho.Urho2D.RigidBody2D.ApplyLinearImpulse" /> and <see cref="M:Urho.Urho2D.RigidBody2D.ApplyAngularImpulse" />.</para>
      <para>Torque (angular force) can be controlled by using <see cref="M:Urho.Urho2D.RigidBody2D.ApplyTorque." /></para>
      <para>You should establish the body type at creation, using the <see cref="P:Urho.Urho2D.RigidBody2D.BodyType" /> property, because changing the body type later is expensive.</para>
      <para>You can also directly set the linear or angular velocity of the body using <see cref="P:Urho.Urho2D.RigidBody2D.LinearVelocity&amp;nbsp;" /> or <see cref="P:Urho.Urho2D.RigidBody2D.AngularVelocity" />. </para>
      <para>To manually move or rotate a body, simply translate or rotate the node to which it belongs to.</para>
      <para>You should set the <see cref="P:Urho.Urho2D.RigidBody2D.BodyType" /> early on, because changing it at a later time is an expensive operation.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RigidBody2D ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Preserve</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <para>Constructs a new instance of Urho.Urho2D.RigidBody2D which is tied to the <see cref="P:Urho.Application.CurrentContext" />.</para>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RigidBody2D (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Preserve</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer to the raw unmanaged Urho object.</param>
        <summary>Constructs a new instance of Urho.Urho2D.RigidBody2D, given a raw pointer to an unmanaged object</summary>
        <remarks>
          <para>This creates a new managed wrapper for the type using the raw pointer to an unmanaged object.</para>
          <para>Objects that are created in this fashion get registered with the UrhoSharp runtime.</para>
          <para>This is intended to be used by the UrhoSharp runtime, and is not intended to be used by users.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RigidBody2D (Urho.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Urho.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Preserve</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Urho.Context" />
      </Parameters>
      <Docs>
        <param name="context">The context that this object will be attached to.</param>
        <summary>
          <para>Constructs a new instance of Urho.Urho2D.RigidBody2D linked to a specific <see cref="T:Urho.Context" />.</para>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RigidBody2D (Urho.UrhoObjectFlag emptyFlag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype Urho.UrhoObjectFlag emptyFlag) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Preserve</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="emptyFlag" Type="Urho.UrhoObjectFlag" />
      </Parameters>
      <Docs>
        <param name="emptyFlag">Pass UrhoObjectFlag.Empty.</param>
        <summary>Empty constructor, chain to this constructor when you provide your own constructor that sets the handle field.</summary>
        <remarks>
          <para>This constructor should be invoked by your code if you provide your own constructor that sets the handle field.</para>
          <para>This essentially circumvents the default path that creates a new object and sets the handle and does not call RegisterObject on the target, you must do this on your own constructor.</para>
          <para>You would typically chain to this constructor from your own, and then set the handle to the unmanaged object from your code, and then register your object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCollisionShape2D">
      <MemberSignature Language="C#" Value="public void AddCollisionShape2D (Urho.Urho2D.CollisionShape2D collisionShape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCollisionShape2D(class Urho.Urho2D.CollisionShape2D collisionShape) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collisionShape" Type="Urho.Urho2D.CollisionShape2D" />
      </Parameters>
      <Docs>
        <param name="collisionShape">To be added.</param>
        <summary>
            Add collision shape.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddConstraint2D">
      <MemberSignature Language="C#" Value="public void AddConstraint2D (Urho.Urho2D.Constraint2D constraint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddConstraint2D(class Urho.Urho2D.Constraint2D constraint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="Urho.Urho2D.Constraint2D" />
      </Parameters>
      <Docs>
        <param name="constraint">To be added.</param>
        <summary>
            Add constraint.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowSleep">
      <MemberSignature Language="C#" Value="public bool AllowSleep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSleep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sets allow sleep flag.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AngularDamping">
      <MemberSignature Language="C#" Value="public float AngularDamping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 AngularDamping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return angular damping.
            Or
            Set angular damping.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AngularVelocity">
      <MemberSignature Language="C#" Value="public float AngularVelocity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 AngularVelocity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return angular velocity.
            Or
            Set angular velocity.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAngularImpulse">
      <MemberSignature Language="C#" Value="public void ApplyAngularImpulse (float impulse, bool wake);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyAngularImpulse(float32 impulse, bool wake) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="impulse" Type="System.Single" />
        <Parameter Name="wake" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="impulse">To be added.</param>
        <param name="wake">To be added.</param>
        <summary>
            Apply angular impulse.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyForce">
      <MemberSignature Language="C#" Value="public void ApplyForce (Urho.Vector2 force, Urho.Vector2 point, bool wake);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyForce(valuetype Urho.Vector2 force, valuetype Urho.Vector2 point, bool wake) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="force" Type="Urho.Vector2" />
        <Parameter Name="point" Type="Urho.Vector2" />
        <Parameter Name="wake" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="force">Direction of the force.</param>
        <param name="point">Where to apply the force.</param>
        <param name="wake">To improve performance, you can request the body to sleep by setting 'wake' parameter to false.</param>
        <summary>
            Apply force.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyForceToCenter">
      <MemberSignature Language="C#" Value="public void ApplyForceToCenter (Urho.Vector2 force, bool wake);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyForceToCenter(valuetype Urho.Vector2 force, bool wake) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="force" Type="Urho.Vector2" />
        <Parameter Name="wake" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="force">Direction of the force.</param>
        <param name="wake">To improve performance, you can request the body to sleep by setting 'wake' parameter to false.</param>
        <summary>
            Apply force to center.
            </summary>
        <remarks>This is the same as ApplyForce, the world point where to apply the force is set to center of mass, which prevents the body from rotating/spinning,</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyLinearImpulse">
      <MemberSignature Language="C#" Value="public void ApplyLinearImpulse (Urho.Vector2 impulse, Urho.Vector2 point, bool wake);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyLinearImpulse(valuetype Urho.Vector2 impulse, valuetype Urho.Vector2 point, bool wake) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="impulse" Type="Urho.Vector2" />
        <Parameter Name="point" Type="Urho.Vector2" />
        <Parameter Name="wake" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="impulse">Direction of the impulse.</param>
        <param name="point">Where the impulse is applied.</param>
        <param name="wake">To improve performance, you can request the body to sleep by setting 'wake' parameter to false.</param>
        <summary>
            Apply linear impulse.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTorque">
      <MemberSignature Language="C#" Value="public void ApplyTorque (float torque, bool wake);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyTorque(float32 torque, bool wake) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="torque" Type="System.Single" />
        <Parameter Name="wake" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="torque">To be added.</param>
        <param name="wake">To improve performance, you can request the body to sleep by setting 'wake' parameter to false.</param>
        <summary>
            Apply Torque.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyWorldTransform">
      <MemberSignature Language="C#" Value="public void ApplyWorldTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyWorldTransform() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Apply world transform.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyWorldTransform">
      <MemberSignature Language="C#" Value="public void ApplyWorldTransform (Urho.Vector3 newWorldPosition, Urho.Quaternion newWorldRotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyWorldTransform(valuetype Urho.Vector3 newWorldPosition, valuetype Urho.Quaternion newWorldRotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newWorldPosition" Type="Urho.Vector3" />
        <Parameter Name="newWorldRotation" Type="Urho.Quaternion" />
      </Parameters>
      <Docs>
        <param name="newWorldPosition">New world position to apply.</param>
        <param name="newWorldRotation">New world rotation to apply.</param>
        <summary>Applies the specified world osition and rotation.</summary>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Awake">
      <MemberSignature Language="C#" Value="public bool Awake { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Awake" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Controls the Awake mode.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BodyType">
      <MemberSignature Language="C#" Value="public Urho.Urho2D.BodyType2D BodyType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Urho2D.BodyType2D BodyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Urho2D.BodyType2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return body type.
            Or
            Set body type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bullet">
      <MemberSignature Language="C#" Value="public bool Bullet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Bullet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Controls the bullet mode.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBody">
      <MemberSignature Language="C#" Value="public void CreateBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateBody() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Create body.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedRotation">
      <MemberSignature Language="C#" Value="public bool FixedRotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FixedRotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Controls whether rotation is fixed.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GravityScale">
      <MemberSignature Language="C#" Value="public float GravityScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 GravityScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return gravity scale.
            Or
            Set gravity scale.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inertia">
      <MemberSignature Language="C#" Value="public float Inertia { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Inertia" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return inertia.
            Or
            Set inertia.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinearDamping">
      <MemberSignature Language="C#" Value="public float LinearDamping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 LinearDamping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return linear damping.
            Or
            Set linear damping.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinearVelocity">
      <MemberSignature Language="C#" Value="public Urho.Vector2 LinearVelocity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector2 LinearVelocity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return linear velocity.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mass">
      <MemberSignature Language="C#" Value="public float Mass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Mass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return mass.
            Or
            Set mass.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MassCenter">
      <MemberSignature Language="C#" Value="public Urho.Vector2 MassCenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector2 MassCenter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return mass center.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetEnabled">
      <MemberSignature Language="C#" Value="public override void OnSetEnabled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnSetEnabled() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Handle enabled/disabled state change.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public static void RegisterObject (Urho.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterObject(class Urho.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Urho.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
            Register object factory.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseBody">
      <MemberSignature Language="C#" Value="public void ReleaseBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseBody() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Release body.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveCollisionShape2D">
      <MemberSignature Language="C#" Value="public void RemoveCollisionShape2D (Urho.Urho2D.CollisionShape2D collisionShape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveCollisionShape2D(class Urho.Urho2D.CollisionShape2D collisionShape) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collisionShape" Type="Urho.Urho2D.CollisionShape2D" />
      </Parameters>
      <Docs>
        <param name="collisionShape">To be added.</param>
        <summary>
            Remove collision shape.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveConstraint2D">
      <MemberSignature Language="C#" Value="public void RemoveConstraint2D (Urho.Urho2D.Constraint2D constraint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveConstraint2D(class Urho.Urho2D.Constraint2D constraint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="Urho.Urho2D.Constraint2D" />
      </Parameters>
      <Docs>
        <param name="constraint">To be added.</param>
        <summary>
            Remove constraint.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLinearVelocity">
      <MemberSignature Language="C#" Value="public void SetLinearVelocity (Urho.Vector2 linearVelocity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLinearVelocity(valuetype Urho.Vector2 linearVelocity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linearVelocity" Type="Urho.Vector2" />
      </Parameters>
      <Docs>
        <param name="linearVelocity">To be added.</param>
        <summary>
            Set linear velocity.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMassCenter">
      <MemberSignature Language="C#" Value="public void SetMassCenter (Urho.Vector2 center);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMassCenter(valuetype Urho.Vector2 center) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="center" Type="Urho.Vector2" />
      </Parameters>
      <Docs>
        <param name="center">To be added.</param>
        <summary>
            Set mass center.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override Urho.StringHash Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.StringHash Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.StringHash</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's type system type.</summary>
        <value>StringHash representing the type for this C# type.</value>
        <remarks>This returns the Urho's type and is surfaced for low-level Urho code.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public override string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's low-level type name.</summary>
        <value>Stringified low-level type name.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeNameStatic">
      <MemberSignature Language="C#" Value="public static string TypeNameStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string TypeNameStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's low-level type name, accessible as a static method.</summary>
        <value>Stringified low-level type name.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeStatic">
      <MemberSignature Language="C#" Value="public static Urho.StringHash TypeStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Urho.StringHash TypeStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Preserve</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Urho.StringHash</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's low-level type, accessible as a static method.</summary>
        <value>This returns the Urho's type and is surface for the low-level Urho code.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseFixtureMass">
      <MemberSignature Language="C#" Value="public bool UseFixtureMass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseFixtureMass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return whether to calculate mass and inertia from collision shapes automatically.
            Or
            Set whether to automatically calculate mass and inertia from collision shapes. Default true.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
