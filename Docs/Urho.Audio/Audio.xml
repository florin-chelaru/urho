<Type Name="Audio" FullName="Urho.Audio.Audio">
  <TypeSignature Language="C#" Value="public class Audio : Urho.UrhoObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Audio extends Urho.UrhoObject" />
  <AssemblyInfo>
    <AssemblyName>Urho</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Urho.UrhoObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Audio subsystem, used to playback both regular audio and 3D sound.</summary>
    <remarks>
      <para>The Audio class represents the audio subsystem, which implements an audio output stream. It is the hub for audio operations in your application.  See the <see cref="N:Urho.Audio" /> documentation for more information.</para>
      <para>To hear pseudo-3D positional sounds, a <see cref="T:Urho.Audio.SoundListener" /> component must exist in a scene node and be assigned to the audio subsystem by setting the <see cref="P:Urho.Audio.Audio.Listener" /> property. </para>
      <para>The output is software mixed for an unlimited amount of simultaneous sounds. Ogg Vorbis sounds are decoded on the fly, and decoding them can be memory- and CPU-intensive, so WAV files are recommended when a large number of short sound effects need to be played.</para>
      <para>For purposes of volume control, each <see cref="T:Urho.Audio.SoundSource" /> can be classified into a user defined group which is multiplied with a master category and the individual <see cref="T:Urho.Audio.SoundSource" /> gain set using <see cref="P:Urho.Audio.SoundSource.Gain" /> for the final volume level.</para>
      <para>To control the category volumes, set the <see cref="M:Urho.Audio.Audio.SetMasterGain" />, which defines the category if it didn't already exist.</para>
      <para>It is possible to control the playback of a class of sounds identified by their type by using the <see cref="M:Urho.Audio.PauseSoundType" />, <see cref="M:Urho.Audio.ResumeSoundType" /> and <see cref="M:Urho.Audio.ResumeAll" /> methods.  You can probe whether a specific sound type is paused by calling the <see cref="M:Urho.Audio.IsSoundTypePaused" />.   The list of possible sound types are the strings “Master”, “Effect”, “Ambient”, “Voice” and “Music”.</para>
      <para>
      </para>
      <para>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Audio ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Preserve</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <para>Constructs a new instance of Urho.Audio.Audio which is tied to the <see cref="P:Urho.Application.CurrentContext" />.</para>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Audio (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Preserve</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer to the raw unmanaged Urho object.</param>
        <summary>Constructs a new instance of Urho.Audio.Audio, given a raw pointer to an unmanaged object</summary>
        <remarks>
          <para>This creates a new managed wrapper for the type using the raw pointer to an unmanaged object.</para>
          <para>Objects that are created in this fashion get registered with the UrhoSharp runtime.</para>
          <para>This is intended to be used by the UrhoSharp runtime, and is not intended to be used by users.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Audio (Urho.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Urho.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Preserve</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Urho.Context" />
      </Parameters>
      <Docs>
        <param name="context">The context that this object will be attached to.</param>
        <summary>
          <para>Constructs a new instance of Urho.Audio.Audio linked to a specific <see cref="T:Urho.Context" />.</para>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Audio (Urho.UrhoObjectFlag emptyFlag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype Urho.UrhoObjectFlag emptyFlag) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Preserve</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="emptyFlag" Type="Urho.UrhoObjectFlag" />
      </Parameters>
      <Docs>
        <param name="emptyFlag">Pass UrhoObjectFlag.Empty.</param>
        <summary>Empty constructor, chain to this constructor when you provide your own constructor that sets the handle field.</summary>
        <remarks>
          <para>This constructor should be invoked by your code if you provide your own constructor that sets the handle field.</para>
          <para>This essentially circumvents the default path that creates a new object and sets the handle and does not call RegisterObject on the target, you must do this on your own constructor.</para>
          <para>You would typically chain to this constructor from your own, and then set the handle to the unmanaged object from your code, and then register your object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSoundSource">
      <MemberSignature Language="C#" Value="public void AddSoundSource (Urho.Audio.SoundSource soundSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSoundSource(class Urho.Audio.SoundSource soundSource) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="soundSource" Type="Urho.Audio.SoundSource" />
      </Parameters>
      <Docs>
        <param name="soundSource">To be added.</param>
        <summary>
            Add a sound source to keep track of. Called by SoundSource.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMasterGain">
      <MemberSignature Language="C#" Value="public float GetMasterGain (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetMasterGain(string type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
            Return master gain for a specific sound source type. Unknown sound types will return full gain (1).
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSoundSourceMasterGain">
      <MemberSignature Language="C#" Value="public float GetSoundSourceMasterGain (Urho.StringHash typeHash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetSoundSourceMasterGain(valuetype Urho.StringHash typeHash) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeHash" Type="Urho.StringHash" />
      </Parameters>
      <Docs>
        <param name="typeHash">To be added.</param>
        <summary>
            Return sound type specific gain multiplied by master gain.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMasterGain">
      <MemberSignature Language="C#" Value="public bool HasMasterGain (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasMasterGain(string type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
            Return whether the specified master gain has been defined.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialized">
      <MemberSignature Language="C#" Value="public bool Initialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Initialized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return whether an audio stream has been reserved.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interpolation">
      <MemberSignature Language="C#" Value="public bool Interpolation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Interpolation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return whether output is interpolated.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSoundTypePaused">
      <MemberSignature Language="C#" Value="public bool IsSoundTypePaused (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSoundTypePaused(string type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">The type of the sound to probe, some possible value  “Master”, “Effect”, “Ambient”, “Voice” and “Music”.</param>
        <summary>Returns whether the specified sound type is currently paused.</summary>
        <returns>True if the sound for that sound type is paused, false otherwise.</returns>
        <remarks>
          <para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Listener">
      <MemberSignature Language="C#" Value="public Urho.Audio.SoundListener Listener { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Urho.Audio.SoundListener Listener" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Audio.SoundListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return active sound listener.
            Or
            Set active sound listener for 3D sounds.
            </summary>
        <value>
          <para />
        </value>
        <remarks>Assign a SoundListener to this property.  The sound listener must be attached to a node in the scene for this to work.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MixOutput">
      <MemberSignature Language="C#" Value="public void MixOutput (IntPtr dest, uint samples);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MixOutput(native int dest, unsigned int32 samples) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.IntPtr" />
        <Parameter Name="samples" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="dest">To be added.</param>
        <param name="samples">To be added.</param>
        <summary>
            Mix sound sources into the buffer.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MixRate">
      <MemberSignature Language="C#" Value="public int MixRate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MixRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return mixing rate.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseSoundType">
      <MemberSignature Language="C#" Value="public void PauseSoundType (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PauseSoundType(string type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">The list of possible sound types are the strings “Master”, “Effect”, “Ambient”, “Voice” and “Music”.</param>
        <summary>Pause playing back the sounds of the specific type.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public bool Play ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Play() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Restart sound output.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Playing">
      <MemberSignature Language="C#" Value="public bool Playing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Playing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return whether audio is being output.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSoundSource">
      <MemberSignature Language="C#" Value="public void RemoveSoundSource (Urho.Audio.SoundSource soundSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveSoundSource(class Urho.Audio.SoundSource soundSource) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="soundSource" Type="Urho.Audio.SoundSource" />
      </Parameters>
      <Docs>
        <param name="soundSource">To be added.</param>
        <summary>
            Remove a sound source. Called by SoundSource.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeAll">
      <MemberSignature Language="C#" Value="public void ResumeAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResumeAll() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resumes playback of all sound types.</summary>
        <remarks>This can be used to resume all sound type playback (some might have been paused by calling <see cref="M:Urho.Audio.PauseSoundType." /></remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeSoundType">
      <MemberSignature Language="C#" Value="public void ResumeSoundType (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResumeSoundType(string type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">The list of possible sound types are the strings “Master”, “Effect”, “Ambient”, “Voice” and “Music”.</param>
        <summary>Resumes playing back the sounds of the specific type.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleSize">
      <MemberSignature Language="C#" Value="public uint SampleSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 SampleSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return byte size of one sample.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMasterGain">
      <MemberSignature Language="C#" Value="public void SetMasterGain (string type, float gain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMasterGain(string type, float32 gain) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="gain" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="gain">To be added.</param>
        <summary>
            Set master gain on a specific sound type such as sound effects, music or voice.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMode">
      <MemberSignature Language="C#" Value="public bool SetMode (int bufferLengthMSec, int mixRate, bool stereo, bool interpolation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetMode(int32 bufferLengthMSec, int32 mixRate, bool stereo, bool interpolation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferLengthMSec" Type="System.Int32" />
        <Parameter Name="mixRate" Type="System.Int32" />
        <Parameter Name="stereo" Type="System.Boolean" />
        <Parameter Name="interpolation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bufferLengthMSec">To be added.</param>
        <param name="mixRate">To be added.</param>
        <param name="stereo">To be added.</param>
        <param name="interpolation">To be added.</param>
        <summary>
            Initialize sound output with specified buffer length and output mode.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stereo">
      <MemberSignature Language="C#" Value="public bool Stereo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Stereo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determines whether output is stereo.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Suspend sound output.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopSound">
      <MemberSignature Language="C#" Value="public void StopSound (Urho.Audio.Sound sound);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopSound(class Urho.Audio.Sound sound) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sound" Type="Urho.Audio.Sound" />
      </Parameters>
      <Docs>
        <param name="sound">To be added.</param>
        <summary>
            Stop any sound source playing a certain sound clip.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override Urho.StringHash Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.StringHash Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.StringHash</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's type system type.</summary>
        <value>StringHash representing the type for this C# type.</value>
        <remarks>This returns the Urho's type and is surfaced for low-level Urho code.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public override string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's low-level type name.</summary>
        <value>Stringified low-level type name.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeNameStatic">
      <MemberSignature Language="C#" Value="public static string TypeNameStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string TypeNameStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's low-level type name, accessible as a static method.</summary>
        <value>Stringified low-level type name.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeStatic">
      <MemberSignature Language="C#" Value="public static Urho.StringHash TypeStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Urho.StringHash TypeStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Preserve</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Urho.StringHash</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's low-level type, accessible as a static method.</summary>
        <value>This returns the Urho's type and is surface for the low-level Urho code.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update (float timeStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update(float32 timeStep) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeStep" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="timeStep">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
