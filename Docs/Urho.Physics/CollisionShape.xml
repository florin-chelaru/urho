<Type Name="CollisionShape" FullName="Urho.Physics.CollisionShape">
  <TypeSignature Language="C#" Value="public class CollisionShape : Urho.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CollisionShape extends Urho.Component" />
  <AssemblyInfo>
    <AssemblyName>Urho</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Urho.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Physics collision shape component.</summary>
    <remarks>
      <para>Use the collision shape component to configure the geometrical shape of the node.</para>
      <para>
      </para>
      <para>You configure the CollisionShape by calling one of the Set methods to configure the shape, the supported shapes are:</para>
      <list type="bullet">
        <item>
          <term>Box shape, configure with <see cref="M:Urho.Physics.CollisionShape.SetBox" /></term>
        </item>
        <item>
          <term>Capsule shape, configure with <see cref="M:Urho.Physics.CollisionShape.SetCapsule" /></term>
        </item>
        <item>
          <term>Cone shape, configure with <see cref="M:Urho.Physics.CollisionShape.SetCone" /></term>
        </item>
        <item>
          <term>Convex hull shape, configure with: <see cref="M:Urho.Physics.CollisionShape.SetConvexHull" /> or <see cref="M:Urho.Physics.CollisionShape.SetCustomConvexHull" /></term>
        </item>
        <item>
          <term>Cylinder shape, configure with <see cref="M:Urho.Physics.CollisionShape.SetCylinder" /></term>
        </item>
        <item>
          <term>Triangle mesh, configure with <see cref="M:Urho.Physics.CollisionShape.SetTriangleMesh" /></term>
        </item>
        <item>
          <term>Sphere shape, configure with </term>
        </item>
        <item>
          <term>Cylinder shape, configure with <see cref="M:Urho.Physics.CollisionShape.SetSphere" /></term>
        </item>
        <item>
          <term>Static plane, configure with <see cref="M:Urho.Physics.CollisionShape.SetStaticPlane" /></term>
        </item>
        <item>
          <term>Heighfield terrain, configure with <see cref="M:Urho.Physics.CollisionShape.SetTerrain" /> (this requires a <see cref="T:Urho.Terrain" /> component on the same node).</term>
        </item>
      </list>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CollisionShape ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Preserve</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <para>Constructs a new instance of Urho.Physics.CollisionShape which is tied to the <see cref="P:Urho.Application.CurrentContext" />.</para>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CollisionShape (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Preserve</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer to the raw unmanaged Urho object.</param>
        <summary>Constructs a new instance of Urho.Physics.CollisionShape, given a raw pointer to an unmanaged object</summary>
        <remarks>
          <para>This creates a new managed wrapper for the type using the raw pointer to an unmanaged object.</para>
          <para>Objects that are created in this fashion get registered with the UrhoSharp runtime.</para>
          <para>This is intended to be used by the UrhoSharp runtime, and is not intended to be used by users.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CollisionShape (Urho.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Urho.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Preserve</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Urho.Context" />
      </Parameters>
      <Docs>
        <param name="context">The context that this object will be attached to.</param>
        <summary>
          <para>Constructs a new instance of Urho.Physics.CollisionShape linked to a specific <see cref="T:Urho.Context" />.</para>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CollisionShape (Urho.UrhoObjectFlag emptyFlag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype Urho.UrhoObjectFlag emptyFlag) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Preserve</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="emptyFlag" Type="Urho.UrhoObjectFlag" />
      </Parameters>
      <Docs>
        <param name="emptyFlag">Pass UrhoObjectFlag.Empty.</param>
        <summary>Empty constructor, chain to this constructor when you provide your own constructor that sets the handle field.</summary>
        <remarks>
          <para>This constructor should be invoked by your code if you provide your own constructor that sets the handle field.</para>
          <para>This essentially circumvents the default path that creates a new object and sets the handle and does not call RegisterObject on the target, you must do this on your own constructor.</para>
          <para>You would typically chain to this constructor from your own, and then set the handle to the unmanaged object from your code, and then register your object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAttributes">
      <MemberSignature Language="C#" Value="public override void ApplyAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyAttributes() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Apply attribute changes that can not be applied immediately. Called after scene load or a network update.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawDebugGeometry">
      <MemberSignature Language="C#" Value="public override void DrawDebugGeometry (Urho.DebugRenderer debug, bool depthTest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DrawDebugGeometry(class Urho.DebugRenderer debug, bool depthTest) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="debug" Type="Urho.DebugRenderer" />
        <Parameter Name="depthTest" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="debug">To be added.</param>
        <param name="depthTest">To be added.</param>
        <summary>
            Visualize the component as debug geometry.
            </summary>
        <remarks>
          <para>sadfasdfa</para>
          <para>sfas</para>
          <para>das</para>
          <para>asdf</para>
          <para>asdf</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LodLevel">
      <MemberSignature Language="C#" Value="public uint LodLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 LodLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return model LOD level.
            Or
            Set model LOD level.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public float Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Margin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return collision margin.
            Or
            Set collision margin.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public Urho.Model Model { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Urho.Model Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Model</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return triangle mesh / convex hull model.
            Or
            Set triangle mesh / convex hull model.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelAttr">
      <MemberSignature Language="C#" Value="public Urho.ResourceRef ModelAttr { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.ResourceRef ModelAttr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.ResourceRef</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return model attribute.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyRigidBody">
      <MemberSignature Language="C#" Value="public void NotifyRigidBody (bool updateMass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NotifyRigidBody(bool updateMass) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateMass" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="updateMass">To be added.</param>
        <summary>
            Update the new collision shape to the RigidBody.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetEnabled">
      <MemberSignature Language="C#" Value="public override void OnSetEnabled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnSetEnabled() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Handle enabled/disabled state change.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PhysicsWorld">
      <MemberSignature Language="C#" Value="public Urho.Physics.PhysicsWorld PhysicsWorld { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Urho.Physics.PhysicsWorld PhysicsWorld" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Physics.PhysicsWorld</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return physics world.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public Urho.Vector3 Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return offset position.
            Or
            Set offset position.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public static void RegisterObject (Urho.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterObject(class Urho.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Urho.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
            Register object factory.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseShape">
      <MemberSignature Language="C#" Value="public void ReleaseShape ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseShape() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Release the collision shape.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public Urho.Quaternion Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Quaternion Rotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Quaternion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return offset rotation.
            Or
            Set offset rotation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBox">
      <MemberSignature Language="C#" Value="public void SetBox (Urho.Vector3 size, Urho.Vector3 position, Urho.Quaternion rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBox(valuetype Urho.Vector3 size, valuetype Urho.Vector3 position, valuetype Urho.Quaternion rotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="Urho.Vector3" />
        <Parameter Name="position" Type="Urho.Vector3" />
        <Parameter Name="rotation" Type="Urho.Quaternion" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <summary>
            Set as a box.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCapsule">
      <MemberSignature Language="C#" Value="public void SetCapsule (float diameter, float height, Urho.Vector3 position, Urho.Quaternion rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCapsule(float32 diameter, float32 height, valuetype Urho.Vector3 position, valuetype Urho.Quaternion rotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diameter" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="position" Type="Urho.Vector3" />
        <Parameter Name="rotation" Type="Urho.Quaternion" />
      </Parameters>
      <Docs>
        <param name="diameter">To be added.</param>
        <param name="height">To be added.</param>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <summary>
            Set as a capsule.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCone">
      <MemberSignature Language="C#" Value="public void SetCone (float diameter, float height, Urho.Vector3 position, Urho.Quaternion rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCone(float32 diameter, float32 height, valuetype Urho.Vector3 position, valuetype Urho.Quaternion rotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diameter" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="position" Type="Urho.Vector3" />
        <Parameter Name="rotation" Type="Urho.Quaternion" />
      </Parameters>
      <Docs>
        <param name="diameter">To be added.</param>
        <param name="height">To be added.</param>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <summary>
            Set as a cone.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetConvexHull">
      <MemberSignature Language="C#" Value="public void SetConvexHull (Urho.Model model, uint lodLevel, Urho.Vector3 scale, Urho.Vector3 position, Urho.Quaternion rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetConvexHull(class Urho.Model model, unsigned int32 lodLevel, valuetype Urho.Vector3 scale, valuetype Urho.Vector3 position, valuetype Urho.Quaternion rotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Urho.Model" />
        <Parameter Name="lodLevel" Type="System.UInt32" />
        <Parameter Name="scale" Type="Urho.Vector3" />
        <Parameter Name="position" Type="Urho.Vector3" />
        <Parameter Name="rotation" Type="Urho.Quaternion" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="lodLevel">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <summary>
            Set as a convex hull from Model.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCustomConvexHull">
      <MemberSignature Language="C#" Value="public void SetCustomConvexHull (Urho.CustomGeometry custom, Urho.Vector3 scale, Urho.Vector3 position, Urho.Quaternion rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomConvexHull(class Urho.CustomGeometry custom, valuetype Urho.Vector3 scale, valuetype Urho.Vector3 position, valuetype Urho.Quaternion rotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="custom" Type="Urho.CustomGeometry" />
        <Parameter Name="scale" Type="Urho.Vector3" />
        <Parameter Name="position" Type="Urho.Vector3" />
        <Parameter Name="rotation" Type="Urho.Quaternion" />
      </Parameters>
      <Docs>
        <param name="custom">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <summary>
            Set as a convex hull from CustomGeometry.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCustomTriangleMesh">
      <MemberSignature Language="C#" Value="public void SetCustomTriangleMesh (Urho.CustomGeometry custom, Urho.Vector3 scale, Urho.Vector3 position, Urho.Quaternion rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomTriangleMesh(class Urho.CustomGeometry custom, valuetype Urho.Vector3 scale, valuetype Urho.Vector3 position, valuetype Urho.Quaternion rotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="custom" Type="Urho.CustomGeometry" />
        <Parameter Name="scale" Type="Urho.Vector3" />
        <Parameter Name="position" Type="Urho.Vector3" />
        <Parameter Name="rotation" Type="Urho.Quaternion" />
      </Parameters>
      <Docs>
        <param name="custom">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <summary>
            Set as a triangle mesh from CustomGeometry.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCylinder">
      <MemberSignature Language="C#" Value="public void SetCylinder (float diameter, float height, Urho.Vector3 position, Urho.Quaternion rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCylinder(float32 diameter, float32 height, valuetype Urho.Vector3 position, valuetype Urho.Quaternion rotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diameter" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="position" Type="Urho.Vector3" />
        <Parameter Name="rotation" Type="Urho.Quaternion" />
      </Parameters>
      <Docs>
        <param name="diameter">To be added.</param>
        <param name="height">To be added.</param>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <summary>
            Set as a cylinder.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSphere">
      <MemberSignature Language="C#" Value="public void SetSphere (float diameter, Urho.Vector3 position, Urho.Quaternion rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSphere(float32 diameter, valuetype Urho.Vector3 position, valuetype Urho.Quaternion rotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diameter" Type="System.Single" />
        <Parameter Name="position" Type="Urho.Vector3" />
        <Parameter Name="rotation" Type="Urho.Quaternion" />
      </Parameters>
      <Docs>
        <param name="diameter">To be added.</param>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <summary>
            Set as a sphere.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStaticPlane">
      <MemberSignature Language="C#" Value="public void SetStaticPlane (Urho.Vector3 position, Urho.Quaternion rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetStaticPlane(valuetype Urho.Vector3 position, valuetype Urho.Quaternion rotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector3" />
        <Parameter Name="rotation" Type="Urho.Quaternion" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <summary>
            Set as a static plane.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTerrain">
      <MemberSignature Language="C#" Value="public void SetTerrain (uint lodLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTerrain(unsigned int32 lodLevel) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lodLevel" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="lodLevel">To be added.</param>
        <summary>
            Set as a terrain. Only works if the same scene node contains a Terrain component.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTransform">
      <MemberSignature Language="C#" Value="public void SetTransform (Urho.Vector3 position, Urho.Quaternion rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTransform(valuetype Urho.Vector3 position, valuetype Urho.Quaternion rotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Urho.Vector3" />
        <Parameter Name="rotation" Type="Urho.Quaternion" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <summary>
            Set offset transform.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTriangleMesh">
      <MemberSignature Language="C#" Value="public void SetTriangleMesh (Urho.Model model, uint lodLevel, Urho.Vector3 scale, Urho.Vector3 position, Urho.Quaternion rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTriangleMesh(class Urho.Model model, unsigned int32 lodLevel, valuetype Urho.Vector3 scale, valuetype Urho.Vector3 position, valuetype Urho.Quaternion rotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Urho.Model" />
        <Parameter Name="lodLevel" Type="System.UInt32" />
        <Parameter Name="scale" Type="Urho.Vector3" />
        <Parameter Name="position" Type="Urho.Vector3" />
        <Parameter Name="rotation" Type="Urho.Quaternion" />
      </Parameters>
      <Docs>
        <param name="model">To be added.</param>
        <param name="lodLevel">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="position">To be added.</param>
        <param name="rotation">To be added.</param>
        <summary>
            Set as a triangle mesh from Model. If you update a model's geometry and want to reapply the shape, call physicsWorld-&gt;RemoveCachedGeometry(model) first.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeType">
      <MemberSignature Language="C#" Value="public Urho.Physics.ShapeType ShapeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Physics.ShapeType ShapeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Physics.ShapeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return shape type.
            Or
            Set shape type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public Urho.Vector3 Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.Vector3 Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.Vector3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return shape size.
            Or
            Set shape size.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override Urho.StringHash Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.StringHash Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.StringHash</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's type system type.</summary>
        <value>StringHash representing the type for this C# type.</value>
        <remarks>This returns the Urho's type and is surfaced for low-level Urho code.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public override string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's low-level type name.</summary>
        <value>Stringified low-level type name.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeNameStatic">
      <MemberSignature Language="C#" Value="public static string TypeNameStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string TypeNameStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's low-level type name, accessible as a static method.</summary>
        <value>Stringified low-level type name.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeStatic">
      <MemberSignature Language="C#" Value="public static Urho.StringHash TypeStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Urho.StringHash TypeStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Preserve</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Urho.StringHash</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's low-level type, accessible as a static method.</summary>
        <value>This returns the Urho's type and is surface for the low-level Urho code.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorldBoundingBox">
      <MemberSignature Language="C#" Value="public Urho.BoundingBox WorldBoundingBox { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.BoundingBox WorldBoundingBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.BoundingBox</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return world-space bounding box.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
