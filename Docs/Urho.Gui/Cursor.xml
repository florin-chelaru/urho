<Type Name="Cursor" FullName="Urho.Gui.Cursor">
  <TypeSignature Language="C#" Value="public class Cursor : Urho.Gui.BorderImage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Cursor extends Urho.Gui.BorderImage" />
  <AssemblyInfo>
    <AssemblyName>Urho</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Urho.Gui.BorderImage</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Mouse cursor UI element.
            </summary>
    <remarks>
      <para>Urho3D supports custom <see cref="T:Urho.Gui.Cursor" /> Shapes defined from an <see cref="T:Urho.Resources.Image" />.</para>
      <para>The Shape can be an OS default from the CursorShape enum, which are automatically switched to and from by the UI subsystem, but can be manually switched to using <see cref="M:Urho.Gui.Cursor.SetShape" /></para>
      <para>Alternatively they can be defined using a name in a string <see cref="String" /> format to identify it.</para>
      <para>There are a number of reserved names that are used for the OS defaults:</para>
      <list type="bullet">
        <item>
          <term>Normal</term>
        </item>
        <item>
          <term>IBeam</term>
        </item>
        <item>
          <term>Cross</term>
        </item>
        <item>
          <term>ResizeVertical</term>
        </item>
        <item>
          <term>ResizeDiagonalTopRight</term>
        </item>
        <item>
          <term>ResizeHorizontal</term>
        </item>
        <item>
          <term>ResizeDiagonalTopLeft</term>
        </item>
        <item>
          <term>ResizeAll</term>
        </item>
        <item>
          <term>AcceptDrop</term>
        </item>
        <item>
          <term>RejectDrop</term>
        </item>
        <item>
          <term>Busy</term>
        </item>
        <item>
          <term>BusyArrow</term>
        </item>
      </list>
      <para>Cursor Shapes can be define in a number of different ways:</para>
      <para />
      <format type="text/html" />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Preserve</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <para>Constructs a new instance of Urho.Gui.Cursor which is tied to the <see cref="P:Urho.Application.CurrentContext" />.</para>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cursor (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Preserve</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer to the raw unmanaged Urho object.</param>
        <summary>Constructs a new instance of Urho.Gui.Cursor, given a raw pointer to an unmanaged object</summary>
        <remarks>
          <para>This creates a new managed wrapper for the type using the raw pointer to an unmanaged object.</para>
          <para>Objects that are created in this fashion get registered with the UrhoSharp runtime.</para>
          <para>This is intended to be used by the UrhoSharp runtime, and is not intended to be used by users.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cursor (Urho.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Urho.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Preserve</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Urho.Context" />
      </Parameters>
      <Docs>
        <param name="context">The context that this object will be attached to.</param>
        <summary>
          <para>Constructs a new instance of Urho.Gui.Cursor linked to a specific <see cref="T:Urho.Context" />.</para>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Cursor (Urho.UrhoObjectFlag emptyFlag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype Urho.UrhoObjectFlag emptyFlag) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Preserve</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="emptyFlag" Type="Urho.UrhoObjectFlag" />
      </Parameters>
      <Docs>
        <param name="emptyFlag">Pass UrhoObjectFlag.Empty.</param>
        <summary>Empty constructor, chain to this constructor when you provide your own constructor that sets the handle field.</summary>
        <remarks>
          <para>This constructor should be invoked by your code if you provide your own constructor that sets the handle field.</para>
          <para>This essentially circumvents the default path that creates a new object and sets the handle and does not call RegisterObject on the target, you must do this on your own constructor.</para>
          <para>You would typically chain to this constructor from your own, and then set the handle to the unmanaged object from your code, and then register your object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyOSCursorShape">
      <MemberSignature Language="C#" Value="public void ApplyOSCursorShape ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyOSCursorShape() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Apply pending OS cursor shape. Called by UI. No-op when the OS mouse pointer is not used.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineShape">
      <MemberSignature Language="C#" Value="public void DefineShape (string shape, Urho.Resources.Image image, Urho.IntRect imageRect, Urho.IntVector2 hotSpot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineShape(string shape, class Urho.Resources.Image image, valuetype Urho.IntRect imageRect, valuetype Urho.IntVector2 hotSpot) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shape" Type="System.String" />
        <Parameter Name="image" Type="Urho.Resources.Image" />
        <Parameter Name="imageRect" Type="Urho.IntRect" />
        <Parameter Name="hotSpot" Type="Urho.IntVector2" />
      </Parameters>
      <Docs>
        <param name="shape">To be added.</param>
        <param name="image">To be added.</param>
        <param name="imageRect">To be added.</param>
        <param name="hotSpot">To be added.</param>
        <summary>
            Define a shape.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineShape">
      <MemberSignature Language="C#" Value="public void DefineShape (Urho.Gui.CursorShape shape, Urho.Resources.Image image, Urho.IntRect imageRect, Urho.IntVector2 hotSpot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineShape(valuetype Urho.Gui.CursorShape shape, class Urho.Resources.Image image, valuetype Urho.IntRect imageRect, valuetype Urho.IntVector2 hotSpot) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shape" Type="Urho.Gui.CursorShape" />
        <Parameter Name="image" Type="Urho.Resources.Image" />
        <Parameter Name="imageRect" Type="Urho.IntRect" />
        <Parameter Name="hotSpot" Type="Urho.IntVector2" />
      </Parameters>
      <Docs>
        <param name="shape">To be added.</param>
        <param name="image">To be added.</param>
        <param name="imageRect">To be added.</param>
        <param name="hotSpot">To be added.</param>
        <summary>
            Define a shape.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public static void RegisterObject (Urho.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterObject(class Urho.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Urho.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
            Register object factory.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShape">
      <MemberSignature Language="C#" Value="public void SetShape (Urho.Gui.CursorShape shape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetShape(valuetype Urho.Gui.CursorShape shape) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shape" Type="Urho.Gui.CursorShape" />
      </Parameters>
      <Docs>
        <param name="shape">To be added.</param>
        <summary>
            Set current shape.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shape">
      <MemberSignature Language="C#" Value="public string Shape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Shape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get current shape.
            Or
            Set current shape.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override Urho.StringHash Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Urho.StringHash Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Urho.StringHash</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's type system type.</summary>
        <value>StringHash representing the type for this C# type.</value>
        <remarks>This returns the Urho's type and is surfaced for low-level Urho code.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public override string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's low-level type name.</summary>
        <value>Stringified low-level type name.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeNameStatic">
      <MemberSignature Language="C#" Value="public static string TypeNameStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string TypeNameStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's low-level type name, accessible as a static method.</summary>
        <value>Stringified low-level type name.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeStatic">
      <MemberSignature Language="C#" Value="public static Urho.StringHash TypeStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Urho.StringHash TypeStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Preserve</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Urho.StringHash</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Urho's low-level type, accessible as a static method.</summary>
        <value>This returns the Urho's type and is surface for the low-level Urho code.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSystemShapes">
      <MemberSignature Language="C#" Value="public bool UseSystemShapes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSystemShapes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Return whether is using system default shapes.
            Or
            Set whether to use system default shapes. Is only possible when the OS mouse cursor has been set visible from the Input subsystem.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
